{"version":3,"sources":["store/account.types.ts","store/account.selectors.ts","store/account.actions.ts","lib/formatCash.js","store/bonds.selector.ts","components/Summary/Summary.js","components/common/TabPanel.js","lib/profitReport.ts","components/ProfitChart/ProfitChart.js","lib/paymentReport.ts","components/PaymentChart/PaymentChart.js","components/CompositionChart/CompositionChart.js","components/CompositionChart/PortfolioChart.js","components/Portfolio/Portfolio.js","store/bonds.actions.ts","components/Bonds/BondList/BondList.tsx","components/Bonds/Bonds.tsx","components/InvestmentConditions/InvestmentConditions.js","components/common/Header.js","App.js","store/index.js","services/http.service.ts","store/bonds.reducer.ts","store/companies.ts","store/account.reducer.ts","store/root.reducer.js","index.js"],"names":["AccountType","Risk","getAccountTotal","state","account","total","getAccountReinvest","reinvest","isAccountIIS","type","IIS","SET_TOTAL","formatter","Intl","NumberFormat","style","currency","maximumSignificantDigits","formatCash","value","format","getBondsTotal","bonds","_","reduce","acc","bond","sellingPrice","quantity","useStyles","makeStyles","root","header","Summary","dispatch","useDispatch","classes","useSelector","bondsTotal","className","Grid","container","spacing","block","item","xs","Box","textAlign","fontSize","Slider","onChange","e","val","payload","setTotal","min","max","step","marks","map","range","num","label","valueLabelDisplay","TabPanel","props","children","activeTab","index","other","role","hidden","id","getCouponValue","rate","bondQuantity","withTax","Math","floor","hasSliceBondPayment","sliceDate","bondPaymentDates","chartStartDate","some","paymentDate","isAfter","isBetween","clone","startOf","endOf","getBondPaymentDates","frequency","couponFrequency","bondEnd","moment","sellingDate","add","temp","purchaseDate","isBefore","push","getChartSlices","start","end","result","date","endDate","invested","returned","details","basicStrategy","slices","chartStart","bondValue","couponValue","interestRate","profitAcc","slice","hasPayment","isSameOrBefore","applyBondCoupons","reinvestStrategy","purchasePrice","additionalBondCount","applyBondCouponsWithReinvest","profitReport","theme","tooltip","margin","padding","backgroundColor","border","color","CustomTooltip","active","tooltipLabel","tooltipContent","ProfitChart","startDate","unix","data","month","width","height","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","strokeDasharray","content","stroke","fillOpacity","fill","concat","name","company","PaymentChart","paymentReport","TYPES","descriptions","COLORS","renderActiveShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","d","r","CompositionChart","cash","useState","activeIndex","setIndex","getData","activeShape","paddingAngle","onMouseEnter","entry","length","PortfolioChart","accountTotal","initialInvestment","lastSlice","pop","picker","tabs","leftAlign","flex","display","TABS","Portfolio","setTab","setDate","iis","utils","MomentUtils","DatePicker","views","minDate","maxDate","Tabs","indicatorColor","textColor","tab","Tab","ADD_BOND","th","img","BondList","TableContainer","component","Paper","Table","TableBody","TableRow","key","TableCell","scope","src","logo","align","IconButton","size","onClick","companyName","Bonds","formGroup","InvestmentConditions","FormGroup","FormControlLabel","control","Checkbox","checked","event","target","Broker","FormHelperText","href","stretch","wrapper","title","Header","alt","App","deps","Typography","variant","HttpClient","appid","baseURL","instance","this","axios","create","responseType","headers","params","get","initialState","url","description","risk","AAA","reducer","combineReducers","action","http","store","api","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","locale","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.652701ca.chunk.js","sourcesContent":["import { Company } from \"./companies\";\n\nexport enum AccountType { Broker, IIS};\nexport enum Risk {AAA, AA, A, BBB, BB, B, CC, C};\n\nexport type Bond = \t{\n  company: Company,\n  purchasePrice: number,\n  purchaseDate: number,\n  sellingPrice: number,\n  sellingDate: number,\n  risk: Risk,\n  interestRate: number,\n  couponFrequency: number,\n  quantity: number\n}\n\nexport type Account = {\n  type: AccountType,\n  reinvest: boolean,\n  total: number\n}\n","import { Account, AccountType } from \"./account.types\";\n\nexport const getAccountTotal = (state: {account: Account}) => state.account.total;\nexport const getAccountReinvest = (state: {account: Account}) => state.account.reinvest;\nexport const isAccountIIS = (state: {account: Account}) => state.account.type === AccountType.IIS;\n","import {Action, ActionCreator, Dispatch} from 'redux';\nimport { AccountType } from \"./account.types\";\n\nexport const SET_TOTAL = \"[ACCOUNT] SET_AMOUNT\";\nexport const SET_REINVEST = \"[ACCOUNT] SET_REINVEST\";\nexport const SET_ACCOUNT_TYPE = \"[ACCOUNT] SET_ACCOUNT_TYPE\";\nexport const LOAD_SUCCESS = \"[ACCOUNT] LOAD_SUCCESS\";\nexport const LOAD_FAILURE = \"[ACCOUNT] LOAD_FAILURE\";\n\nexport const load = () => async (dispatch: Dispatch, getState: Function) => {}\n\nexport const setTotal = (total: number) => ({\n  type: SET_TOTAL,\n  payload: total\n});\n\nexport const setReinvest = (value: boolean) => ({\n  type: SET_REINVEST,\n  payload: value\n});\n\nexport const setAccountType = (value: AccountType) => ({\n  type: SET_ACCOUNT_TYPE,\n  payload: value\n});\n\nexport const loadSuccess: ActionCreator<Action> = (data: any) => ({\n  type: LOAD_SUCCESS,\n  payload: data\n});\n\nexport const loadFailure: ActionCreator<Action> = (error: any) => ({\n  type: LOAD_FAILURE,\n  payload: error\n});\n\n\n","const formatter = new Intl.NumberFormat('ru-RU', {\n  style: 'currency',\n  currency: 'RUB',\n  maximumSignificantDigits: 6\n});\n\nexport const formatCash = (value) => {\n  return formatter.format(value);\n}\n","import _ from \"lodash\";\nimport { Bond } from \"./account.types\";\n\nexport const getBondsTotal = ({ bonds }: {bonds: Array<Bond>}): number => {\n  return _.reduce(bonds, (acc: number, bond: Bond) => acc + bond.sellingPrice*bond.quantity, 0)\n};\n","import _ from 'lodash';\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Box, Grid, Slider } from '@material-ui/core';\nimport { getAccountTotal } from \"../../store/account.selectors\";\nimport { setTotal } from \"../../store/account.actions\";\nimport { formatCash } from \"../../lib/formatCash\";\nimport { getBondsTotal } from \"../../store/bonds.selector\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"margin-bottom\": '60px',\n  },\n  header: {\n    \"margin-bottom\": \"60px\",\n    \"text-align\": \"left\"\n  }\n})\n\nconst getMarks = () => _.map(_.range(0, 1001, 200), num => {\n  return {\n    value: num,\n    label: num ? `${num} K` : 0\n  }\n})\n\nexport const Summary = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const total = useSelector(getAccountTotal);\n  const bondsTotal = useSelector(getBondsTotal);\n\n  const onChange = (e, val) => {\n    if (val * 1000 > bondsTotal) {\n      dispatch(setTotal(val * 1000))\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid className={classes.block} item xs={10}>\n          <Box className={classes.header} textAlign=\"left\" fontSize=\"h6.fontSize\">Сколько вы готовы вложить?</Box>\n          <Slider\n            value={total / 1000}\n            onChange={onChange}\n            min={0}\n            max={1000}\n            step={50}\n            marks={getMarks()}\n            valueLabelDisplay=\"on\"\n          />\n        </Grid>\n        <Grid className={classes.block} item xs={2}>\n          <Box fontSize=\"h4.fontSize\">{formatCash(total)}</Box>\n        </Grid>\n      </Grid>\n    </div>\n  )\n};\n","import React from \"react\";\n\nexport const TabPanel = (props) => {\n  const { children, activeTab, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={activeTab !== index}\n      id={`tabpanel-${index}`}\n      {...other}\n    >\n      {activeTab === index && (\n        <div>{children}</div>\n      )}\n    </div>\n  );\n}\n","import moment from \"moment\";\nimport { Bond } from \"../store/account.types\";\n\nexport type Slice = {\n  date: moment.Moment,\n  invested: number,\n  returned: number,\n  details: Array<object>\n}\n\nexport function getCouponValue(\n  rate: number,\n  sellingPrice: number,\n  bondQuantity: number,\n  withTax?: boolean\n) {\n  return Math.floor(rate * sellingPrice * bondQuantity * (withTax ? 0.77 : 1));\n}\n\nexport function hasSliceBondPayment(sliceDate: moment.Moment, bondPaymentDates: Array<moment.Moment>, chartStartDate: moment.Moment): boolean {\n  return bondPaymentDates.some(\n    (paymentDate: moment.Moment) => {\n      return paymentDate.isAfter(chartStartDate) &&\n        paymentDate.isBetween(sliceDate.clone().startOf('month'), sliceDate.clone().endOf('month'))\n    }\n  )\n}\n\nexport function getBondPaymentDates(bond: Bond): Array<moment.Moment> {\n  let bondPaymentDates: Array<moment.Moment> = [];\n\n  const frequency = 12 / bond.couponFrequency;\n  const bondEnd = moment(bond.sellingDate * 1000).add(1, 'day');\n  let temp = moment(bond.purchaseDate * 1000).add(6, 'month'); //19.10.2002\n\n  while (temp.isBefore(bondEnd)) {\n    bondPaymentDates.push(temp.clone());\n    temp.add(frequency, 'month');\n  }\n\n  return bondPaymentDates;\n}\n\nexport function getChartSlices(start: number, end: number): Array<Slice> {\n  let result: Array<Slice> = [];\n  let date = moment(start * 1000);\n  let endDate = moment(end * 1000);\n\n  while (date.isBefore(endDate)) {\n    result.push({\n      date: date.clone(),\n      invested: 0,\n      returned: 0,\n      details: []\n    });\n\n    date.add(1, 'month');\n  }\n\n  return result;\n}\n\nexport function applyBondCoupons(\n  bond: Bond,\n  slices: Array<Slice>,\n  withTax?: boolean\n): Array<Slice> {\n  const chartStart = slices[0].date;\n  const bondPaymentDates = getBondPaymentDates(bond)\n  const bondValue = bond.quantity * bond.sellingPrice;\n  const couponValue = getCouponValue(bond.interestRate, bond.sellingPrice, bond.quantity, withTax);\n  let profitAcc = 0;\n\n  return slices.map(slice => {\n    const hasPayment = hasSliceBondPayment(slice.date, bondPaymentDates, chartStart);\n    profitAcc = hasPayment ? profitAcc + couponValue : profitAcc;\n\n    return ({\n      ...slice,\n      date: slice.date,\n      invested: slice.invested + (moment(bond.sellingDate * 1000).isAfter(slice.date) ? bondValue : 0),\n      returned: slice.returned + profitAcc + (moment(bond.sellingDate * 1000).isSameOrBefore(slice.date) ? bondValue : 0)\n    })\n  });\n}\n\nexport const applyBondCouponsWithReinvest = (\n  bond: Bond,\n  slices: Array<Slice>,\n  withTax?: boolean\n) => {\n  const chartStart = slices[0].date;\n  const bondPaymentDates = getBondPaymentDates(bond)\n\n  let profitAcc = 0;\n  let bondQuantity = bond.quantity;\n\n  return slices.map(slice => {\n    const hasPayment = hasSliceBondPayment(slice.date, bondPaymentDates, chartStart);\n    let bondValue = bondQuantity * bond.sellingPrice;\n    let couponValue;\n\n    if (!hasPayment) {\n      return ({\n        ...slice,\n        date: slice.date,\n        invested: slice.invested + bondValue,\n        returned: slice.returned + profitAcc\n      })\n    }\n\n    couponValue = getCouponValue(bond.interestRate, bond.sellingPrice, bondQuantity, withTax);\n    profitAcc = profitAcc + couponValue;\n    if (profitAcc < bond.purchasePrice) {\n      return ({\n        ...slice,\n        date: slice.date,\n        invested: slice.invested + bondValue,\n        returned: slice.returned + profitAcc\n      })\n    }\n\n    const additionalBondCount = Math.floor(profitAcc / bond.purchasePrice);\n    profitAcc = profitAcc - bond.purchasePrice * additionalBondCount;\n    bondQuantity += additionalBondCount;\n    bondValue = bondQuantity * bond.sellingPrice;\n\n    return ({\n      ...slice,\n      date: slice.date,\n      invested: slice.invested + bondValue,\n      returned: slice.returned + profitAcc\n    })\n  });\n}\n\n\nexport const basicStrategy = (\n  start: number,\n  end: number,\n  bonds: Array<Bond>,\n  withTax: boolean\n) => {\n  return bonds.reduce((slices: Array<Slice>, bond: Bond) =>\n    applyBondCoupons(bond, slices, withTax), getChartSlices(start, end));\n}\n\nexport const reinvestStrategy = (\n  start: number,\n  end: number,\n  bonds: Array<Bond>,\n  withTax: boolean\n) => {\n  return bonds.reduce((slices: Array<Slice>, bond: Bond) =>\n    applyBondCouponsWithReinvest(bond, slices, withTax), getChartSlices(start, end));\n}\n\nexport const profitReport = (\n  start: number,\n  end: number,\n  bonds: Array<Bond>,\n  reinvest?: boolean,\n  withTax: boolean = true\n): Array<Slice> => {\n  return reinvest ? reinvestStrategy(start, end, bonds, withTax) : basicStrategy(start, end, bonds, withTax);\n};\n","import moment from \"moment\";\nimport React from \"react\";\nimport { ResponsiveContainer, AreaChart, XAxis, YAxis, CartesianGrid, Area, Tooltip } from \"recharts\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { profitReport } from \"../../lib/profitReport\";\nimport { getAccountReinvest } from \"../../store/account.selectors\";\nimport { formatCash } from \"../../lib/formatCash\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"margin-left\": \"-20px\"\n  },\n  tooltip: {\n    margin: 0,\n    padding: 10,\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n  },\n  total: {\n    color: \"#82ca9d\"\n  },\n  invested: {\n    color: \"#8884d8\"\n  }\n}));\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  const classes = useStyles();\n\n  if (active) {\n    return (\n      <>\n        <div className={classes.tooltip}>\n          <div className={classes.tooltipLabel}>{label}</div>\n          <div className={classes.tooltipContent}>\n            <div className={classes.total}>\n              Всего: {formatCash(payload[0].payload.returned + payload[0].payload.invested)}\n            </div>\n            <div className={classes.invested}>\n              В облигациях: {formatCash(payload[0].payload.invested)}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport const ProfitChart = ({ end, withTax }) => {\n  const classes = useStyles();\n  const startDate = moment().startOf('day').unix();\n  const endDate = moment(end).unix();\n\n  const reinvest = useSelector(getAccountReinvest);\n  const bonds = useSelector(state => state.bonds);\n\n  const data = profitReport(startDate, endDate, bonds, reinvest, withTax).map(slice => ({\n    ...slice,\n    total: slice.invested + slice.returned,\n    month: slice.date.format(\"MMM YYYY\")\n  }))\n\n  return (\n    <div className={classes.root}>\n      <ResponsiveContainer width={\"100%\"} height={250}>\n        <AreaChart data={data}\n                   margin={{ top: 10, right: 50, left: 50, bottom: 0 }}>\n          <defs>\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\n            </linearGradient>\n            <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis dataKey=\"month\" />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip content={<CustomTooltip />} />\n          <Area type=\"monotone\" dataKey=\"total\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n          <Area type=\"monotone\" dataKey=\"invested\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n","import { Bond } from \"../store/account.types\";\nimport {\n  getBondPaymentDates,\n  getChartSlices, getCouponValue, hasSliceBondPayment,\n  Slice\n} from \"./profitReport\";\n\nexport function applyBondCoupons(\n  bond: Bond,\n  slices: Array<Slice>,\n  withTax?: boolean\n): Array<Slice> {\n  const chartStart = slices[0].date;\n  const bondPaymentDates = getBondPaymentDates(bond);\n  const couponValue = getCouponValue(bond.interestRate, bond.sellingPrice, bond.quantity, withTax);\n\n  return slices.map(slice => {\n    const hasPayment = hasSliceBondPayment(slice.date, bondPaymentDates, chartStart);\n\n    return ({\n      date: slice.date,\n      invested: 0,\n      returned: slice.returned + (hasPayment ? couponValue : 0),\n      details: slice.details.concat([{\n        name: bond.company.name,\n        returned: hasPayment ? couponValue : 0\n      }])\n    })\n  });\n}\n\nexport const applyBondCouponsWithReinvest = (\n  bond: Bond,\n  slices: Array<Slice>,\n  withTax?: boolean\n) => {\n  const chartStart = slices[0].date;\n  const bondPaymentDates = getBondPaymentDates(bond)\n\n  let profitAcc = 0;\n  let bondQuantity = bond.quantity;\n\n  return slices.map(slice => {\n    const hasPayment = hasSliceBondPayment(slice.date, bondPaymentDates, chartStart);\n    let couponValue;\n\n    if (!hasPayment) {\n      return slice;\n    }\n\n    couponValue = getCouponValue(bond.interestRate, bond.sellingPrice, bondQuantity, withTax);\n    profitAcc = profitAcc + couponValue;\n    if (profitAcc < bond.purchasePrice) {\n      return ({\n        ...slice,\n        date: slice.date,\n        invested: 0,\n        returned: slice.returned + couponValue,\n        details: slice.details.concat([{\n          name: bond.company.name,\n          returned: couponValue\n        }])\n      })\n    }\n\n    const additionalBondCount = Math.floor(profitAcc / bond.purchasePrice);\n    profitAcc = profitAcc - bond.purchasePrice * additionalBondCount;\n    bondQuantity += additionalBondCount;\n\n    return ({\n      ...slice,\n      date: slice.date,\n      invested: 0,\n      returned: slice.returned + profitAcc,\n      details: slice.details.concat([{\n        name: bond.company.name,\n        returned: profitAcc\n      }])\n    })\n  });\n}\n\n\nexport const basicStrategy = (\n  start: number,\n  end: number,\n  bonds: Array<Bond>,\n  withTax: boolean\n) => {\n  return bonds.reduce((slices: Array<Slice>, bond: Bond) =>\n    applyBondCoupons(bond, slices, withTax), getChartSlices(start, end));\n}\n\nexport const reinvestStrategy = (\n  start: number,\n  end: number,\n  bonds: Array<Bond>,\n  withTax: boolean\n) => {\n  return bonds.reduce((slices: Array<Slice>, bond: Bond) =>\n    applyBondCouponsWithReinvest(bond, slices, withTax), getChartSlices(start, end));\n}\n\nexport const paymentReport = (\n  start: number,\n  end: number,\n  bonds: Array<Bond>,\n  reinvest: boolean,\n  withTax: boolean = true\n): Array<Slice> => {\n  return reinvest ? reinvestStrategy(start, end, bonds, withTax) : basicStrategy(start, end, bonds, withTax);\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n} from 'recharts';\nimport { useSelector } from \"react-redux\";\nimport { getAccountReinvest } from \"../../store/account.selectors\";\nimport { paymentReport } from \"../../lib/paymentReport\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { formatCash } from \"../../lib/formatCash\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  tooltip: {\n    margin: 0,\n    padding: 10,\n    backgroundColor: '#fff',\n    border: '1px solid #ccc',\n  },\n  tooltipLabel: {\n    \"margin-bottom\": \"5px\"\n  },\n  tooltipContent: {\n    color: \"#8884d8\"\n  }\n}));\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  const classes = useStyles();\n\n  if (active) {\n    return (\n      <>\n        <div className={classes.tooltip}>\n          <div className={classes.tooltipLabel}>{label}</div>\n          <div className={classes.tooltipContent}>\n            {\n              payload[0].payload.details.map(\n                bond => bond.returned ? <div>{bond.name}: {formatCash(bond.returned)}</div> : null\n              )\n            }\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport const PaymentChart = ({ end, withTax }) => {\n  const classes = useStyles();\n  const startDate = moment().startOf('day').unix();\n  const endDate = moment(end).unix();\n\n  const reinvest = useSelector(getAccountReinvest);\n  const bonds = useSelector(state => state.bonds);\n\n  const data = paymentReport(startDate, endDate, bonds, reinvest, withTax).map(slice => ({\n    ...slice,\n    month: slice.date.format(\"MMM YY\")\n  }))\n\n  return (\n    <div className={classes.root}>\n      <ResponsiveContainer width={\"100%\"} height={250}>\n        <BarChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"month\" />\n          <YAxis />\n          <Tooltip content={<CustomTooltip />} />\n          <Bar dataKey=\"returned\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector } from \"recharts\";\nimport { formatCash } from \"../../lib/formatCash\";\n\nconst TYPES = {\n  Investment: 0,\n  Cash: 1\n}\n\nconst descriptions = {\n  [TYPES.Investment]: \"Инвестиции\",\n  [TYPES.Cash]: \"Доступно\"\n}\n\nconst COLORS = ['#0088FE', '#00C49F'];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, value\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{descriptions[payload.name]}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`${formatCash(value)}`}</text>\n      {/*<text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">*/}\n      {/*  {`(Rate ${(percent * 100).toFixed(2)}%)`}*/}\n      {/*</text>*/}\n    </g>\n  );\n};\n\nconst getData = (cash, invested) => {\n  return [\n    { name: TYPES.Investment, value: invested },\n    { name: TYPES.Cash, value: cash }\n  ];\n}\n\nexport const CompositionChart = ({ cash, invested }) => {\n  const [activeIndex, setIndex] = useState(0);\n  const data = getData(cash, invested);\n\n  return (\n    <ResponsiveContainer width={\"100%\"} height={250}>\n      <PieChart>\n        <Pie\n          activeIndex={activeIndex}\n          activeShape={renderActiveShape}\n          data={data}\n          cx={200}\n          cy={120}\n          innerRadius={60}\n          outerRadius={80}\n          paddingAngle={5}\n          onMouseEnter={(data, index) => setIndex(index)}\n        >\n          {\n            data.map((entry, index) =>\n              <Cell fill={COLORS[index % COLORS.length]} />)\n          }\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { CompositionChart } from \"./CompositionChart\";\nimport { useSelector } from \"react-redux\";\nimport { getAccountReinvest, getAccountTotal } from \"../../store/account.selectors\";\nimport { getBondsTotal } from \"../../store/bonds.selector\";\nimport { profitReport } from \"../../lib/profitReport\";\nimport moment from \"moment\";\nimport { Box } from \"@material-ui/core\";\n\n//слайдер - accountTotal = slice.invested[first] + freeMoney\n//первый чарт - slice.invested[first] | freeMoney\n//второй чарт - slice.invested[last] | slice.returned + accountTotal - slice.invested[first]\n\n// 1 000 000 <-слайдер\n//500 K - bondsTotal, 500 K - free money\n//550 K - slice.invested, 20 K - slice.returned, freeMoney - 500 K\n\nexport const PortfolioChart = ({ end, withTax }) => {\n  const accountTotal = useSelector(getAccountTotal); //slider\n  const initialInvestment = useSelector(getBondsTotal); // slice.invested[first]\n\n  const startDate = moment().startOf('day').unix();\n  const endDate = moment(end).unix();\n\n  const reinvest = useSelector(getAccountReinvest);\n  const bonds = useSelector(state => state.bonds);\n\n  const lastSlice = profitReport(startDate, endDate, bonds, reinvest, withTax).pop()\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <Box fontSize={\"h6.fontSize\"}>Сейчас</Box>\n        <CompositionChart cash={accountTotal - initialInvestment} invested={initialInvestment} />\n      </Grid>\n      <Grid item xs={6}>\n        <Box fontSize={\"h6.fontSize\"}>В конце периода</Box>\n        <CompositionChart\n          cash={accountTotal - initialInvestment + lastSlice.returned}\n          invested={lastSlice.invested}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import moment from \"moment\";\nimport MomentUtils from '@date-io/moment';\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, Tab, Tabs, Box } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { TabPanel } from \"../common/TabPanel\";\nimport { isAccountIIS } from \"../../store/account.selectors\";\nimport { ProfitChart } from \"../ProfitChart/ProfitChart\";\nimport { PaymentChart } from \"../PaymentChart/PaymentChart\";\nimport { PortfolioChart } from \"../CompositionChart/PortfolioChart\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"margin-bottom\": \"50px\",\n  },\n  header: {\n    \"margin-bottom\": \"25px\",\n    \"text-align\": \"left\"\n  },\n  picker: {\n    width: \"200px\",\n    \"margin-bottom\": \"20px\"\n  },\n  tabs: {\n    \"margin-bottom\": \"25px\"\n  },\n  leftAlign: {\n    \"text-align\": \"left\"\n  },\n  flex: {\n    display: \"flex\",\n    \"justify-content\": \"space-between\"\n  }\n}));\n\nconst TABS = { Profit: 0, Composition: 1 };\n\nexport const Portfolio = () => {\n  const classes = useStyles();\n  const [activeTab, setTab] = useState(TABS.Profit);\n  const [date, setDate] = useState(moment().add(1, 'year'));\n  const iis = useSelector(isAccountIIS);\n\n  return (\n    <Box className={classes.root}>\n      <div className={classes.flex}>\n        <Box className={classes.header} textAlign=\"left\" fontSize=\"h6.fontSize\">Посчитаем доходы?</Box>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <div className={classes.leftAlign}>\n            <DatePicker\n              className={classes.picker}\n              views={[\"year\", \"month\"]}\n              label=\"Изменить конечную дату\"\n              minDate={moment().add(1, 'year')}\n              maxDate={moment().add(5, 'year')}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </div>\n        </MuiPickersUtilsProvider>\n      </div>\n      <Tabs\n        className={classes.tabs}\n        indicatorColor=\"primary\"\n        textColor={\"primary\"}\n        value={activeTab}\n        onChange={(e, tab) => setTab(tab)}\n      >\n        <Tab label=\"Прогноз доходов\" />\n        <Tab label=\"Состав портфеля\" />\n        <Tab label=\"Расписание выплат\" />\n      </Tabs>\n      <TabPanel activeTab={activeTab} index={0}>\n        <ProfitChart end={date} withTax={!iis} />\n      </TabPanel>\n      <TabPanel activeTab={activeTab} index={1}>\n        <PortfolioChart end={date} withTax={!iis} />\n      </TabPanel>\n      <TabPanel activeTab={activeTab} index={2}>\n        <PaymentChart end={date} withTax={!iis} />\n      </TabPanel>\n    </Box>\n  );\n}\n","export const ADD_BOND = \"[BONDS] ADD_BOND\";\nexport const REMOVE_BOND = \"[BONDS] REMOVE_BOND\";\n\nexport const addBond = (companyName: string) => ({\n  type: ADD_BOND,\n  payload: { companyName }\n});\n\nexport const removeBond = (companyName: string) => ({\n  type: REMOVE_BOND,\n  payload: { companyName }\n});\n","import React from \"react\";\nimport { Bond } from \"../../../store/account.types\";\nimport { Paper, TableCell, TableContainer, TableBody, TableRow, Table, IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { addBond, removeBond } from \"../../../store/bonds.actions\";\n\nconst useStyles = makeStyles(() => ({\n  th: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  },\n  img: {\n    \"margin-right\": \"10px\"\n  }\n}));\n\nexport const BondList = ({ bonds }: { bonds: Array<Bond> }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableBody>\n          {bonds.map((bond, index) => (\n            <TableRow key={index}>\n              <TableCell className={classes.th} component=\"th\" scope=\"row\">\n                <img className={classes.img} height={30} src={bond.company.logo} />\n                {bond.company.name}\n              </TableCell>\n              <TableCell align=\"right\">\n                {`${bond.quantity} шт.`}\n                <IconButton\n                  size=\"small\"\n                  onClick={() => dispatch(addBond(bond.company.name))}\n                >\n                  <AddIcon fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => dispatch(removeBond(bond.company.name))}\n                >\n                  <RemoveIcon fontSize=\"small\" />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"right\">\n                {`${bond.interestRate}%`}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { BondList } from \"./BondList/BondList\";\nimport { Bond } from \"../../store/account.types\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"margin-bottom\": \"50px\",\n  },\n  header: {\n    \"margin-bottom\": \"25px\",\n    \"text-align\": \"left\"\n  }\n}));\n\nexport const Bonds = () => {\n  const classes = useStyles();\n  const bonds = useSelector(({ bonds }: { bonds: Array<Bond> }) => bonds);\n\n  return (\n    <div className={classes.root}>\n      <Box className={classes.header} textAlign=\"left\" fontSize=\"h6.fontSize\">Ваши облигации</Box>\n      <BondList bonds={bonds} />\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Box, Checkbox, FormControlLabel, FormGroup, Grid } from \"@material-ui/core\";\nimport { setAccountType, setReinvest } from \"../../store/account.actions\";\nimport { AccountType } from \"../../store/account.types\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAccountReinvest, isAccountIIS } from \"../../store/account.selectors\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"margin-bottom\": '60px',\n  },\n  header: {\n    \"margin-bottom\": \"25px\",\n  },\n  formGroup: {\n    \"margin-bottom\": \"10px\",\n  }\n})\n\nexport const InvestmentConditions = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const reinvest = useSelector(getAccountReinvest);\n  const iis = useSelector(isAccountIIS);\n\n  return (\n    <div className={classes.root}>\n      <Grid item xs={12}>\n        <Box>\n          <Box className={classes.header} textAlign=\"left\" fontSize=\"h6.fontSize\">Условия инвестирования</Box>\n          <FormGroup className={classes.formGroup}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={iis}\n                  onChange={\n                    (event) =>\n                      dispatch(setAccountType(event.target.checked ? AccountType.IIS : AccountType.Broker))\n                  }\n                  name=\"IIS\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Индивидуальный инвестиционный счет\"\n            />\n            <FormHelperText>\n              Индивидуальный инвестиционный счет открывается не менее чем на три года и позволяет получить +13%\n              к инвестициям за счет налогового вычета.\n              <a href=\"https://bcspremier.ru/investment/iis/\">Подробнее...</a>\n            </FormHelperText>\n          </FormGroup>\n          <FormGroup className={classes.formGroup}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={reinvest}\n                  onChange={(event) => dispatch(setReinvest(event.target.checked))}\n                  name=\"Reinvest\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Реинвестировать\"\n            />\n            <FormHelperText>\n              Накопленный доход с облигаций будет автоматически использован для покупки новых облигаций того же\n              эмитента. Доходы с облигаций одного эмитента не будут использоваться дл покупки облигаций других\n              эмитентов.\n            </FormHelperText>\n          </FormGroup>\n        </Box>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  stretch: {\n    margin: \"0 -500px\",\n    \"background\": \"#3a4fcc\"\n  },\n  wrapper: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    padding: \"20px 0\",\n    margin: \"0 auto\",\n    \"max-width\": \"900px\"\n  },\n  title: {\n    \"margin-left\": \"10px\",\n    \"font-size\": \"16px\",\n    \"font-weight\": 600,\n    color: \"white\"\n  }\n})\n\nexport const Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.stretch}>\n      <div className={classes.wrapper}>\n        <img alt=\"logo\" src={\"logo.svg\"} width={26} height={26} />\n        <span className={classes.title}>BCS EXPRESS</span>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { Summary } from \"./components/Summary/Summary\";\nimport { Portfolio } from \"./components/Portfolio/Portfolio\";\nimport { Bonds } from \"./components/Bonds/Bonds\";\nimport { InvestmentConditions } from \"./components/InvestmentConditions/InvestmentConditions\";\nimport { Header } from \"./components/common/Header\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <div style={{ \"max-width\": \"1000px\", \"margin\": \"0 auto\" }}>\n        <Box style={{ \"margin\": \"35px 0\" }} textAlign={\"left\"}>\n          <Typography variant={\"h4\"}>\n            Календарь инвестиций\n          </Typography>\n        </Box>\n        <Summary />\n        <InvestmentConditions />\n        <Portfolio />\n        <Bonds />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reducer as rootReducer } from \"./root.reducer\";\n\nexport const makeStore = (deps, state) =>\n  createStore(\n    rootReducer,\n    state,\n    composeWithDevTools(applyMiddleware(\n      thunk.withExtraArgument(deps)\n    ))\n  );\n","import axios, { AxiosInstance } from 'axios';\n\nexport class HttpClient {\n  private readonly appid: string;\n  private readonly instance: AxiosInstance;\n\n  public constructor(appid: string, baseURL?: string) {\n    this.appid = appid;\n    this.instance = axios.create({\n      baseURL,\n      responseType: 'json',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  public get(params: object) {\n    return this.instance.get(\"\", {\n      params: {\n        ...params,\n        appid: this.appid //workaround because of broken default params in axios\n      }\n    });\n  }\n};\n","import { Risk, Bond } from \"./account.types\";\nimport { GazProm, Tinkoff, Alfa, SberBank } from \"./companies\";\nimport { AnyAction } from \"redux\";\nimport { ADD_BOND, REMOVE_BOND } from \"./bonds.actions\";\n\nconst initialState: Array<Bond> = [\n  {\n    company: GazProm,\n    purchasePrice: 1000,\n    purchaseDate: 1594764000,\n    sellingPrice: 1000,\n    sellingDate: 1689372000,\n    risk: Risk.AAA,\n    interestRate: 0.06,\n    couponFrequency: 2,\n    quantity: 40\n  },\n  {\n    company: Tinkoff,\n    purchasePrice: 2000,\n    purchaseDate: 1586901600,\n    sellingPrice: 2000,\n    sellingDate: 1681509600,\n    risk: Risk.AAA,\n    interestRate: 0.07,\n    couponFrequency: 4,\n    quantity: 30\n  },\n  {\n    company: Alfa,\n    purchasePrice: 1500,\n    purchaseDate: 1586901600,\n    sellingPrice: 1500,\n    sellingDate: 1621548000,\n    risk: Risk.AAA,\n    interestRate: 0.1,\n    couponFrequency: 6,\n    quantity: 70\n  },\n  {\n    company: SberBank,\n    purchasePrice: 700,\n    purchaseDate: 1625176800,\n    sellingPrice: 700,\n    sellingDate: 1653084000,\n    risk: Risk.AAA,\n    interestRate: 0.1,\n    couponFrequency: 12,\n    quantity: 20\n  }\n];\n\nexport const reducer = (state: Array<Bond> = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case ADD_BOND:\n      return state.map(bond =>\n        bond.company.name === action.payload.companyName ?\n          {\n            ...bond,\n            quantity: bond.quantity + 1\n          } :\n          bond\n      );\n    case REMOVE_BOND:\n      return state.map(bond =>\n        bond.company.name === action.payload.companyName ?\n          {\n            ...bond,\n            quantity: bond.quantity > 1 ? bond.quantity - 1 : bond.quantity\n          } :\n          bond\n      );\n    default:\n      return state;\n  }\n};\n","export type Company = {\n  name: string,\n  url: string,\n  logo: string,\n  description: string\n}\n\nexport const GazProm: Company = {\n  name: \"GazProm\",\n  url: \"https://www.gazprom.com/\",\n  logo: \"https://www.carspending.com/images/venue-brands/global/gazprom-global.png\",\n  description: \"\"\n}\n\nexport const Tinkoff: Company = {\n  name: \"Tinkoff\",\n  url: \"https://www.tinkoff.ru/\",\n  logo: \"https://www.toornament.com/media/file/1536090193804132352/logo_large?v=1529066396\",\n  description: \"\"\n}\n\nexport const Alfa: Company = {\n  name: \"Alfa\",\n  url: \"https://www.tinkoff.ru/\",\n  logo: \"https://investments.alfabank.ru/assets/static/media/logo_alfabank_circle.d5629432.png\",\n  description: \"\"\n}\n\nexport const SberBank: Company = {\n  name: \"SberBank\",\n  url: \"https://www.tinkoff.ru/\",\n  logo: \"https://mobinews.online/uploads/sberbank.png\",\n  description: \"\"\n}\n","import { Account, AccountType } from \"./account.types\";\nimport { SET_TOTAL, SET_REINVEST, SET_ACCOUNT_TYPE } from \"./account.actions\";\n\nconst initialState: Account = {\n  type: AccountType.IIS,\n  reinvest: false,\n  total: 300000\n}\n\nexport const reducer = (state: Account = initialState, { type, payload }: { type: string, payload: any }) => {\n  switch (type) {\n    case SET_REINVEST:\n      return {\n        ...state,\n        reinvest: payload\n      };\n    case SET_TOTAL:\n      return {\n        ...state,\n        total: payload\n      };\n    case SET_ACCOUNT_TYPE:\n      return {\n        ...state,\n        type: payload\n      };\n    default:\n      return state;\n  }\n};\n\n","import { combineReducers } from \"redux\";\nimport { reducer as bondsReducer } from \"./bonds.reducer\";\nimport { reducer as accountReducer } from \"./account.reducer\";\n\nexport const reducer = combineReducers({\n  bonds: bondsReducer,\n  account: accountReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport './index.css';\n\nimport moment from \"moment\";\nimport \"moment/locale/ru\";\n\nimport { HttpClient } from \"./services/http.service\";\nimport { makeStore } from \"./store\";\n\nconst http = new HttpClient();\nconst store = makeStore({ api: http }, {});\n\nmoment.locale('ru');\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}